version: "3"
services:

  # ---
  # App - our full-stack JavaScript Demo
  # ---

  angular:
    build: ./frontend
    command: "npm run serve:docker"
    ports:
      - "80:4200"
    volumes:
      - ${PWD}/frontend:/workspace
      - /workspace/node_modules

  middleware:
    build: ./middleware
    command: npm run server
    ports:
      - "3000:3000"
    volumes:
      - ${PWD}/middleware/src:/workspace/src
      - /workspace/node_modules
    environment:
      - PORT=3000

  auth-service:
    build: ./auth-service
    command: npm run server
    ports:
      - "5000:3000"
    volumes:
      - ${PWD}/auth-service/src:/workspace/src
      - /workspace/node_modules
    environment:
      - USER_DEMO=password
      - USER_BENSL=secret

  # -------
  # Jenkins - our Automation Server
  # -------

  jenkins:
    build: ./jenkins
    ports:
      - "8080:8080"
    volumes:
     - jenkins_data:/var/lib/jenkins
    environment:
     - ADMIN_USER=cidemo
     - ADMIN_PASSWORD=cidemo
     - PIPELINE_LIBRARY_REMOTE=https://github.com/allianz-de/cidemo-pipeline-library.git

  # ------------
  # Selenium Hub - with Chrome and Firefox for E2E Tests
  # ------------

  selenium-hub:
    image: selenium/hub
    container_name: selenium-hub
    ports:
      - "4444:4444"
    expose:
      - "4444"

  chrome:
    image: selenium/node-chrome-debug
    depends_on:
      - selenium-hub
    environment:
      - HUB_PORT_4444_TCP_ADDR=selenium-hub
      - HUB_PORT_4444_TCP_PORT=4444
    # restart: always

  firefox:
    image: selenium/node-firefox-debug
    depends_on:
      - selenium-hub
    environment:
      - HUB_PORT_4444_TCP_ADDR=selenium-hub
      - HUB_PORT_4444_TCP_PORT=4444
    # restart: always

  # -----------
  # Artifactory - used for storing compiled artifacts
  # -----------

  # postgresql:
  #   image: postgres:9.5
  #   container_name: postgresql
  #   ports:
  #    - "5432:5432"
  #   expose:
  #     - "5432"
  #   environment:
  #    - POSTGRES_DB=artifactory
  #    # Must match `DB_USER` and `DB_PASSWORD`
  #    - POSTGRES_USER=artifactory
  #    - POSTGRES_PASSWORD=password
  #   volumes:
  #    - postgresql_data:/var/lib/postgresql/data

  # artifactory:
  #   image: docker.bintray.io/jfrog/artifactory-oss:5.4.5
  #   container_name: artifactory
  #   ports:
  #    - "8000:8081"
  #   depends_on:
  #    - postgresql
  #   links:
  #    - postgresql
  #   volumes:
  #    - artifactory_data:/var/opt/jfrog/artifactory
  #   environment:
  #    - DB_TYPE=postgresql
  #    # Must match `POSTGRES_USER` and `POSTGRES_PASSWORD`
  #    - DB_USER=artifactory
  #    - DB_PASSWORD=password

volumes:
  jenkins_data:
  # artifactory_data:
  postgresql_data:
